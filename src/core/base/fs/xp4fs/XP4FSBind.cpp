//---------------------------------------------------------------------------
/*
	TVP3 ( T Visual Presenter 3 )  A script authoring tool
	Copyright (C) 2000-2006 W.Dee <dee@kikyou.info> and contributors

	See details of license at "license.txt"
*/
//---------------------------------------------------------------------------
//! @file
//! @brief XP4FSのTJS3バインディング
//---------------------------------------------------------------------------
#include "prec.h"
#include "XP4FS.h"
#include "XP4FSBind.h"
#include "TVPException.h"

TJS_DEFINE_SOURCE_ID(2015);



//---------------------------------------------------------------------------
//! @brief		コンストラクタ
//---------------------------------------------------------------------------
tTJSNI_XP4FS::tTJSNI_XP4FS()
{
}
//---------------------------------------------------------------------------


//---------------------------------------------------------------------------
//! @brief		TJS コンストラクタ
//---------------------------------------------------------------------------
tjs_error tTJSNI_XP4FS::Construct(tjs_int numparams,
		tTJSVariant **param, iTJSDispatch2 *tjs_obj)
{
	/*%
		@fn		XP4FS.XP4FS
		@brief	XP4FSを構築する
		@param	filename		XP4アーカイブファイル名
	*/

	if(numparams < 1) return TJS_E_BADPARAMCOUNT;

	ttstr filename = *param[0];

	// filesystem オブジェクトの生成と登録
	RegisterFileSystemNativeInstance(tjs_obj, new tTVPXP4FS(filename));
}
//---------------------------------------------------------------------------


//---------------------------------------------------------------------------
//! @brief		TJS 無効化関数
//---------------------------------------------------------------------------
void tTJSNI_XP4FS::Invalidate()
{
}
//---------------------------------------------------------------------------






//---------------------------------------------------------------------------
//! @brief		XP4FS クラスID
//---------------------------------------------------------------------------
tjs_uint32 tTJSNC_XP4FS::ClassID = (tjs_uint32)-1;
//---------------------------------------------------------------------------


//---------------------------------------------------------------------------
//! @brief		コンストラクタ
//---------------------------------------------------------------------------
tTJSNC_XP4FS::tTJSNC_XP4FS() :
	tTJSNativeClass(TJS_WS("XP4FS"))
{
	// class constructor

	TJS_BEGIN_NATIVE_MEMBERS(/*TJS class name*/XP4FS)
	TJS_DECL_EMPTY_FINALIZE_METHOD
//----------------------------------------------------------------------
TJS_BEGIN_NATIVE_CONSTRUCTOR_DECL(/*var. name*/_this, /*var. type*/tTJSNI_XP4FS,
	/*TJS class name*/ XP4FS)
{
	return TJS_S_OK;
}
TJS_END_NATIVE_CONSTRUCTOR_DECL(/*TJS class name*/XP4FS)
//----------------------------------------------------------------------
//----------------------------------------------------------------------
	TJS_END_NATIVE_MEMBERS
}
//---------------------------------------------------------------------------


//---------------------------------------------------------------------------
//! @brief		ネイティブインスタンスを作成して返す
//! @return		ネイティブインスタンス
//---------------------------------------------------------------------------
tTJSNativeInstance *tTJSNC_XP4FS::CreateNativeInstance()
{
	return new tTJSNI_XP4FS();
}
//---------------------------------------------------------------------------




//---------------------------------------------------------------------------
//! @brief		コンストラクタ
//---------------------------------------------------------------------------
tTVPXP4FSRegisterer::tTVPXP4FSRegisterer()
{
	// ファイルシステムクラスオブジェクトの下にクラスオブジェクトを登録する
	iTJSDispatch2 * cls = new tTJSNC_XP4FS();
	try
	{
		tTVPFileSystemRegisterer::instance().RegisterClassObject(
							TJS_WS("XP4FS"), cls);
	}
	catch(...)
	{
		cls->Release();
		throw;
	}
	cls->Release();
}
//---------------------------------------------------------------------------
