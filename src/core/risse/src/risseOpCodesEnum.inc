// generated by tools/opecodes.rb
// do not edit this file by hand

//! @brief オペーレーションコードの列挙型
enum tRisseOpCode {
/*   0 */ ocNoOperation /*!<  なにもしない */,
/*   1 */ ocAssign /*!<  = (ローカル変数の代入) */,
/*   2 */ ocAssignConstant /*!<  = 定数の代入 */,
/*   3 */ ocAssignThis /*!<  = thisの代入 */,
/*   4 */ ocAssignSuper /*!<  = superの代入 */,
/*   5 */ ocAssignGlobal /*!<  = globalの代入 */,
/*   6 */ ocAssignNewArray /*!<  = 新しい配列オブジェクトの代入 */,
/*   7 */ ocAssignNewDict /*!<  = 新しい辞書配列オブジェクトの代入 */,
/*   8 */ ocAssignNewRegExp /*!<  = 新しい正規表現オブジェクトの代入 (引数2つ) */,
/*   9 */ ocAssignParam /*!<  = (O番目の関数引数を代入) */,
/*  10 */ ocAssignBlockParam /*!<  = (O番目の関数ブロック引数を代入) */,
/*  11 */ ocWrite /*!<  共有空間への書き込み */,
/*  12 */ ocRead /*!<  共有空間からの読み込み */,
/*  13 */ ocNew /*!<  "new" */,
/*  14 */ ocTryFuncCall /*!<  try function call */,
/*  15 */ ocFuncCall /*!<  function call */,
/*  16 */ ocFuncCallBlock /*!<  function call with lazyblock(VMのみで使用) */,
/*  17 */ ocSetFrame /*!<  スタックフレームと共有空間を設定する */,
/*  18 */ ocSetShare /*!<  共有空間のみ設定する */,
/*  19 */ ocJump /*!<  単純なジャンプ */,
/*  20 */ ocBranch /*!<  分岐 */,
/*  21 */ ocCatchBranch /*!<  例外catch用の分岐 */,
/*  22 */ ocReturn /*!<  return ステートメント */,
/*  23 */ ocDebugger /*!<  debugger ステートメント */,
/*  24 */ ocThrow /*!<  throw ステートメント */,
/*  25 */ ocExitTryException /*!<  Try脱出用例外を発生させる */,
/*  26 */ ocGetExitTryValue /*!<  Try脱出用例外オブジェクトから値を得る */,
/*  27 */ ocLogNot /*!<  "!" logical not */,
/*  28 */ ocBitNot /*!<  "~" bit not */,
/*  29 */ ocDecAssign /*!<  "--" decrement */,
/*  30 */ ocIncAssign /*!<  ++ increment */,
/*  31 */ ocPlus /*!<  + */,
/*  32 */ ocMinus /*!<  - */,
/*  33 */ ocLogOr /*!<  || */,
/*  34 */ ocLogAnd /*!<  && */,
/*  35 */ ocBitOr /*!<  | */,
/*  36 */ ocBitXor /*!<  ^ */,
/*  37 */ ocBitAnd /*!<  & */,
/*  38 */ ocNotEqual /*!<  != */,
/*  39 */ ocEqual /*!<  == */,
/*  40 */ ocDiscNotEqual /*!<  !== */,
/*  41 */ ocDiscEqual /*!<  === */,
/*  42 */ ocLesser /*!<  < */,
/*  43 */ ocGreater /*!<  > */,
/*  44 */ ocLesserOrEqual /*!<  <= */,
/*  45 */ ocGreaterOrEqual /*!<  >= */,
/*  46 */ ocRBitShift /*!<  >>> */,
/*  47 */ ocLShift /*!<  << */,
/*  48 */ ocRShift /*!<  >> */,
/*  49 */ ocMod /*!<  % */,
/*  50 */ ocDiv /*!<  / */,
/*  51 */ ocIdiv /*!<  \ (integer div) */,
/*  52 */ ocMul /*!<  * */,
/*  53 */ ocAdd /*!<  + */,
/*  54 */ ocSub /*!<  - */,
/*  55 */ ocIncontextOf /*!<  incontextof */,
/*  56 */ ocDGet /*!<  get .   */,
/*  57 */ ocIGet /*!<  get [ ] */,
/*  58 */ ocDDelete /*!<  delete . */,
/*  59 */ ocIDelete /*!<  delete [ ] */,
/*  60 */ ocDSet /*!<  set . */,
/*  61 */ ocISet /*!<  set [ ] */,
/*  62 */ ocBitAndAssign /*!<  &= */,
/*  63 */ ocBitOrAssign /*!<  |= */,
/*  64 */ ocBitXorAssign /*!<  ^= */,
/*  65 */ ocSubAssign /*!<  -= */,
/*  66 */ ocAddAssign /*!<  += */,
/*  67 */ ocModAssign /*!<  %= */,
/*  68 */ ocDivAssign /*!<  /= */,
/*  69 */ ocIdivAssign /*!<  \= */,
/*  70 */ ocMulAssign /*!<  *= */,
/*  71 */ ocLogOrAssign /*!<  ||= */,
/*  72 */ ocLogAndAssign /*!<  &&= */,
/*  73 */ ocRBitShiftAssign /*!<  >>>= */,
/*  74 */ ocLShiftAssign /*!<  <<= */,
/*  75 */ ocRShiftAssign /*!<  >>= */,
/*  76 */ ocVMCodeLast /*!<  VMオペコードの最後 */,
/*  77 */ ocPhi /*!<  φ関数 */,
/*  78 */ ocDefineAccessMap /*!<  アクセスマップ定義 */,
/*  79 */ ocDefineLazyBlock /*!<  遅延評価ブロックの定義 */,
/*  80 */ ocEndAccessMap /*!<  アクセスマップの使用終了 */,
/*  81 */ ocParentWrite /*!<  親名前空間への書き込み */,
/*  82 */ ocParentRead /*!<  親名前空間からの読み込み */,
/*  83 */ ocChildWrite /*!<  子名前空間への書き込み */,
/*  84 */ ocChildRead /*!<  子名前空間からの読み込み */,
/*  85 */ ocWriteVar /*!<  変数への書き込み(変換の過程でocAssignかocWriteに変わる) */,
/*  86 */ ocReadVar /*!<  変数からの読み込み(変換の過程でocAssignかocReadに変わる) */,
/*  87 */ ocOpCodeLast /*!<  オペコードの最後 */,
};
