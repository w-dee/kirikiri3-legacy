//---------------------------------------------------------------------------
/*
	Risa [りさ]      alias 吉里吉里3 [kirikiri-3]
	 stands for "Risa Is a Stagecraft Architecture"
	Copyright (C) 2000-2007 W.Dee <dee@kikyou.info> and contributors

	See details of license at "license.txt"

	Rina stands for "Rina is an Imaging Network Assembler"
*/
//---------------------------------------------------------------------------
//! @file
//! @brief RINA コマンドキュー管理
//---------------------------------------------------------------------------
#include "prec.h"
#include "visual/rina/rinaQueue.h"


namespace Rina {
RISSE_DEFINE_SOURCE_ID(19972,63368,40219,19790,30879,4075,829,3560);
//---------------------------------------------------------------------------


//---------------------------------------------------------------------------
tQueueNode::tQueueNode()
{
}
//---------------------------------------------------------------------------


//---------------------------------------------------------------------------
void tQueueNode::Process()
{
	// まず BeginProcess を呼び出す
	BeginProcess();

	// Children を呼び出す。本質的にはここは(子の間には依存関係がないと見なせるので)
	// 並列処理ができるところである。
	for(tChildren::iterator i = Children.begin(); i != Children.end(); i++)
		(*i)->Process(); // 子に再帰する

	// 最後に EndProcess を呼び出す
	EndProcess();
}
//---------------------------------------------------------------------------







//---------------------------------------------------------------------------
void tRootQueueNode::BeginProcess()
{
	// なにもしない
	RISSE_ASSERT(Children.size() == 1);
}
//---------------------------------------------------------------------------


//---------------------------------------------------------------------------
void tRootQueueNode::EndProcess()
{
	// なにもしない
}
//---------------------------------------------------------------------------





//---------------------------------------------------------------------------
}
